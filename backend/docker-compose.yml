services:
  backend:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            python manage.py create_super_user &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "${PORT:-8000}:8000"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  db:
    image: postgres:16.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  celery-worker:
    build:
      context: .
    command: celery -A core worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    restart: unless-stopped

  celery-beat:
    build:
      context: .
    command: celery -A core beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    restart: unless-stopped

  flower:
    build:
      context: .
    command: celery -A core flower --port=5555
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - celery-worker
    ports:
      - "5555:5555"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
